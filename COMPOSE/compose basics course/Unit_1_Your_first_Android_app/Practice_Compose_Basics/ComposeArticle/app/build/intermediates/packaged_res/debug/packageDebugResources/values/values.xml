<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="black">#FF000000</color>
    <color name="purple_200">#FFBB86FC</color>
    <color name="purple_500">#FF6200EE</color>
    <color name="purple_700">#FF3700B3</color>
    <color name="teal_200">#FF03DAC5</color>
    <color name="teal_700">#FF018786</color>
    <color name="white">#FFFFFFFF</color>
    <string name="app_name">Compose Article</string>
    <string name="long_description">In this tutorial, you build a simple UI component
        with declarative functions. You call Compose functions to say what elements
        you want and the Compose compiler does the rest. Compose is built around
        Composable functions. These functions let you define your app\'s UI
        programmatically because they let you describe how it should look
        and provide data dependencies, rather than focus on the process
        of the UI\'s construction, such as initializing an element and
        then attaching it to a parent. To create a Composable function,
        you add the @Composable annotation to the function name.</string>
    <string name="short_description">Jetpack Compose is a modern toolkit for
        building native Android UI. Compose simplifies and accelerates
        UI development on Android with less code, powerful tools, and
        intuitive Kotlin APIs.</string>
    <string name="title">Jetpack Compose tutorial</string>
    <style name="Theme.ComposeArticle" parent="android:Theme.Material.Light.NoActionBar"/>
</resources>