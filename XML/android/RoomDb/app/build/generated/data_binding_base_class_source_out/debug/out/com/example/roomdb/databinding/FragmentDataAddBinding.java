// Generated by data binding compiler. Do not edit!
package com.example.roomdb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.roomdb.R;
import com.example.roomdb.viewmodel.CommonViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentDataAddBinding extends ViewDataBinding {
  @NonNull
  public final Button buttonGo;

  @NonNull
  public final EditText editTextName;

  @NonNull
  public final EditText editTextOccupation;

  @NonNull
  public final EditText editTextPhone;

  @NonNull
  public final EditText editTextTextEmail;

  @NonNull
  public final EditText editTextTextMultiLine;

  @Bindable
  protected CommonViewModel mDataAddViewModel;

  protected FragmentDataAddBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button buttonGo, EditText editTextName, EditText editTextOccupation, EditText editTextPhone,
      EditText editTextTextEmail, EditText editTextTextMultiLine) {
    super(_bindingComponent, _root, _localFieldCount);
    this.buttonGo = buttonGo;
    this.editTextName = editTextName;
    this.editTextOccupation = editTextOccupation;
    this.editTextPhone = editTextPhone;
    this.editTextTextEmail = editTextTextEmail;
    this.editTextTextMultiLine = editTextTextMultiLine;
  }

  public abstract void setDataAddViewModel(@Nullable CommonViewModel dataAddViewModel);

  @Nullable
  public CommonViewModel getDataAddViewModel() {
    return mDataAddViewModel;
  }

  @NonNull
  public static FragmentDataAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_data_add, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentDataAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentDataAddBinding>inflateInternal(inflater, R.layout.fragment_data_add, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentDataAddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_data_add, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentDataAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentDataAddBinding>inflateInternal(inflater, R.layout.fragment_data_add, null, false, component);
  }

  public static FragmentDataAddBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentDataAddBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentDataAddBinding)bind(component, view, R.layout.fragment_data_add);
  }
}
